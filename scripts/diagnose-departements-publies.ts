import axios from 'axios';

const BASE_URL = 'http://localhost:3001/api/v1';

async function diagnoseDepartementsPublies() {
  try {
    console.log('üîê Authentification...');
    
    // Authentification
    const loginResponse = await axios.post(`${BASE_URL}/auth/login`, {
      email: 'anderson.aka@cei.ci',
      password: 'adminDtic@2025!'
    });

    const token = loginResponse.data.accessToken;
    console.log('‚úÖ Authentification r√©ussie !');

    // Test de l'endpoint header
    console.log('\nüìä Test de l\'endpoint Header...');
    
    const response = await axios.get(`${BASE_URL}/elections/election-2025/results/header`, {
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    });

    console.log('‚úÖ Header - Succ√®s !');
    console.log('üìà D√©partements publi√©s:', response.data.data.departementsPublies);
    console.log('üìä Nombre de d√©partements:', response.data.data.departementsPublies?.length || 0);

    // Test de l'endpoint d√©partements
    console.log('\nüèõÔ∏è Test de l\'endpoint D√©partements...');
    
    try {
      const deptResponse = await axios.get(`${BASE_URL}/departements`, {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      });

      console.log('‚úÖ D√©partements - Succ√®s !');
      console.log('üìä Nombre total de d√©partements:', deptResponse.data?.length || 0);
      
      if (deptResponse.data && deptResponse.data.length > 0) {
        console.log('\nüìã Liste des d√©partements:');
        deptResponse.data.forEach((dept: any, index: number) => {
          console.log(`  ${index + 1}. ${dept.libelleDepartement || dept.nom || dept.name} (${dept.statutPublication || dept.status || 'N/A'})`);
        });
      }

    } catch (error) {
      console.log('‚ùå Erreur d√©partements:', error.response?.status, error.response?.data?.message);
    }

    // Test de l'endpoint r√©gions
    console.log('\nüåç Test de l\'endpoint R√©gions...');
    
    try {
      const regionResponse = await axios.get(`${BASE_URL}/regions`, {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      });

      console.log('‚úÖ R√©gions - Succ√®s !');
      console.log('üìä Nombre total de r√©gions:', regionResponse.data?.length || 0);
      
      if (regionResponse.data && regionResponse.data.length > 0) {
        console.log('\nüìã Liste des r√©gions:');
        regionResponse.data.forEach((region: any, index: number) => {
          console.log(`  ${index + 1}. ${region.libelleRegion || region.nom || region.name}`);
        });
      }

    } catch (error) {
      console.log('‚ùå Erreur r√©gions:', error.response?.status, error.response?.data?.message);
    }

    console.log('\nüîç DIAGNOSTIC:');
    console.log('=' .repeat(50));
    console.log('1. L\'endpoint header retourne:', response.data.data.departementsPublies?.length || 0, 'd√©partements');
    console.log('2. V√©rifiez la valeur de statutPublication dans la base de donn√©es');
    console.log('3. Les valeurs possibles peuvent √™tre: PUBLIE, PUBLI√â, PUBLISHED, etc.');
    console.log('4. Le frontend re√ßoit une liste vide car aucun d√©partement n\'a le statut "PUBLIE"');

  } catch (error) {
    console.error('‚ùå Erreur:', error.response?.status, error.response?.data?.message || error.message);
  }
}

diagnoseDepartementsPublies();
