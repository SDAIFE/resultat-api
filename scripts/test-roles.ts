#!/usr/bin/env ts-node

/**
 * Script de test pour les r√¥les
 */

import axios from 'axios';

const API_BASE_URL = 'http://localhost:3001/api';

let accessToken: string;

async function login(): Promise<boolean> {
  console.log('üîê Connexion...');
  
  try {
    const response = await axios.post(`${API_BASE_URL}/auth/login`, {
      email: 'anderson.aka@cei.ci',
      password: 'motdepasse123'
    });

    accessToken = response.data.accessToken;
    console.log('‚úÖ Connexion r√©ussie');
    return true;
  } catch (error: any) {
    console.error('‚ùå Erreur de connexion:', error.response?.data || error.message);
    console.error('D√©tails de l\'erreur:', error);
    return false;
  }
}

async function testRolesList(): Promise<void> {
  console.log('\nüë• Test de la liste des r√¥les...');
  
  try {
    const response = await axios.get(`${API_BASE_URL}/roles`, {
      headers: {
        'Authorization': `Bearer ${accessToken}`
      }
    });

    console.log('‚úÖ Liste des r√¥les r√©cup√©r√©e avec succ√®s');
    console.log('Nombre de r√¥les:', response.data.length);
    console.log('\nüìã R√¥les disponibles:');
    
    response.data.forEach((role: any, index: number) => {
      console.log(`${index + 1}. ${role.code} - ${role.name}`);
      if (role.description) {
        console.log(`   Description: ${role.description}`);
      }
    });

  } catch (error: any) {
    console.error('‚ùå Erreur lors de la r√©cup√©ration des r√¥les:', error.response?.data || error.message);
  }
}

async function testRolesSimpleList(): Promise<void> {
  console.log('\nüìã Test de la liste simple des r√¥les...');
  
  try {
    const response = await axios.get(`${API_BASE_URL}/roles/list/simple`, {
      headers: {
        'Authorization': `Bearer ${accessToken}`
      }
    });

    console.log('‚úÖ Liste simple des r√¥les r√©cup√©r√©e avec succ√®s');
    console.log('Nombre de r√¥les:', response.data.length);
    console.log('\nüìã R√¥les pour formulaires:');
    
    response.data.forEach((role: any, index: number) => {
      console.log(`${index + 1}. ${role.code} - ${role.name} (ID: ${role.id})`);
    });

  } catch (error: any) {
    console.error('‚ùå Erreur lors de la r√©cup√©ration de la liste simple:', error.response?.data || error.message);
  }
}

async function testCreateUserWithRole(): Promise<void> {
  console.log('\nüë§ Test de cr√©ation d\'utilisateur avec r√¥le...');
  
  try {
    // R√©cup√©rer la liste des r√¥les
    const rolesResponse = await axios.get(`${API_BASE_URL}/roles/list/simple`, {
      headers: { 'Authorization': `Bearer ${accessToken}` }
    });

    const roles = rolesResponse.data;
    console.log('‚úÖ R√¥les r√©cup√©r√©s:', roles.length);

    // S√©lectionner le premier r√¥le (g√©n√©ralement USER)
    const selectedRole = roles.find((r: any) => r.code === 'USER') || roles[0];
    console.log('R√¥le s√©lectionn√©:', selectedRole.code, '-', selectedRole.name);

    // Cr√©er un utilisateur avec ce r√¥le
    const userData = {
      email: `test.role.${Date.now()}@example.com`,
      firstName: 'Test',
      lastName: 'With Role',
      password: 'motdepasse123',
      roleId: selectedRole.id,
      isActive: true
    };

    console.log('üìù Donn√©es de cr√©ation:');
    console.log('Email:', userData.email);
    console.log('R√¥le ID:', userData.roleId);

    const response = await axios.post(`${API_BASE_URL}/users`, userData, {
      headers: {
        'Authorization': `Bearer ${accessToken}`,
        'Content-Type': 'application/json'
      }
    });

    console.log('‚úÖ Utilisateur cr√©√© avec succ√®s !');
    console.log('ID:', response.data.id);
    console.log('Email:', response.data.email);
    console.log('R√¥le:', response.data.role.code, '-', response.data.role.name);

    // Nettoyer - supprimer l'utilisateur cr√©√©
    console.log('\nüßπ Nettoyage...');
    await axios.delete(`${API_BASE_URL}/users/${response.data.id}`, {
      headers: { 'Authorization': `Bearer ${accessToken}` }
    });
    console.log('‚úÖ Utilisateur supprim√©');

  } catch (error: any) {
    console.error('‚ùå Erreur lors de la cr√©ation:', error.response?.data || error.message);
  }
}

async function main(): Promise<void> {
  console.log('üß™ Test des r√¥les\n');
  console.log('Base URL:', API_BASE_URL);
  console.log('=' .repeat(50));

  // Connexion
  const loggedIn = await login();
  if (!loggedIn) {
    console.log('\n‚ùå Impossible de continuer sans connexion');
    return;
  }

  // Tests
  await testRolesList();
  await testRolesSimpleList();
  await testCreateUserWithRole();

  console.log('\nüéâ Tests des r√¥les termin√©s !');
}

if (require.main === module) {
  main().catch(console.error);
}
